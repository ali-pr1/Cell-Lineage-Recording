from sklearn.manifold import TSNE
from scipy.spatial import distance
import seaborn as sns
import numpy as np
import pandas as pd
from sklearn import metrics
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt


#merge all observations
#dy1: 647,555,dynamic rounds
#dy2: 488, 594,dynamic rounds
#st:all channels, static rounds
df = pd.read_excel ('E:\\ALI\\processing project\\Zombie\\dil 1\\Analysis\\pos1\\{:02d}\\'.format(1)+'_pos{:02d}dy1.xlsx'.format(1))
df['pos']=[1 for i in range(len(df))]
#computation is slow but when finished we use 24 instead of 6
for p in range(3,6):
    dfa = pd.read_excel ('E:\\ALI\\processing project\\Zombie\\dil 1\\Analysis\\pos1\\{:02d}\\'.format(p)+'_pos{:02d}dy1.xlsx'.format(p))
    dfa['pos']=[p for i in range(len(dfa))]
    df=df.append(dfa)
file_name = data_dir+'_pos_cell_num_actvsite_props.xlsx'
df.to_excel(file_name)

df1 = pd.read_excel ('E:\\ALI\\processing project\\Zombie\\dil 1\\Analysis\\pos1\\{:02d}\\'.format(1)+'_pos{:02d}dy2.xlsx'.format(1))
df1['pos']=[1 for i in range(len(df1))]
for p in range(3,6):
    dfa = pd.read_excel ('E:\\ALI\\processing project\\Zombie\\dil 1\\Analysis\\pos1\\{:02d}\\'.format(p)+'_pos{:02d}dy2.xlsx'.format(p))
    dfa['pos']=[p for i in range(len(dfa))]
    df1=df1.append(dfa)
file_name = data_dir+'_pos_cell_num_actvsite_props2.xlsx'
df1.to_excel(file_name)


df2 = pd.read_excel ('E:\\ALI\\processing project\\Zombie\\dil 1\\Analysis\\pos1\\{:02d}\\'.format(1)+'_pos{:02d}st.xlsx'.format(1))
df2['pos']=[1 for i in range(len(df2))]
for p in range(3,6):
    dfa = pd.read_excel ('E:\\ALI\\processing project\\Zombie\\dil 1\\Analysis\\pos1\\{:02d}\\'.format(p)+'_pos{:02d}st.xlsx'.format(p))
    dfa['pos']=[p for i in range(len(dfa))]
    df2=df2.append(dfa)
file_name = data_dir+'_pos_cell_num_actvsite_props3.xlsx'
df2.to_excel(file_name)








####run from here








df = pd.read_excel(data_dir+'_pos_cell_num_actvsite_props.xlsx')
df.drop(columns='Unnamed: 0',inplace=True)
df.drop(columns='inf',inplace=True)
df.drop(columns='Unnamed: 0.1',inplace=True)
df
df1 = pd.read_excel(data_dir+'_pos_cell_num_actvsite_props2.xlsx')
df1.drop(columns='Unnamed: 0',inplace=True)
df1.drop(columns='inf',inplace=True)
df1.drop(columns='Unnamed: 0.1',inplace=True)
df1
df2 = pd.read_excel(data_dir+'_pos_cell_num_actvsite_props3.xlsx')
df2.drop(columns='Unnamed: 0',inplace=True)
df2.drop(columns='inf',inplace=True)
df2.drop(columns='Unnamed: 0.1',inplace=True)
df2




# in few cases intensity values are zero. for sake of logarithm I changed them to 1
for i in range(len(df)):
    if df['647'][i]==0:
        df['647'][i]=1
    if df['555'][i]==0:
        df['555'][i]=1
for i in range(len(df1)):
    if df1['488'][i]==0:
        df1['488'][i]=1
    if df1['594'][i]==0:
        df1['594'][i]=1
for i in range(len(df2)):
    if df2['488'][i]==0:
        df2['488'][i]=1
    if df2['594'][i]==0:
        df2['594'][i]=1
    if df2['647'][i]==0:
        df2['647'][i]=1
    if df2['555'][i]==0:
        df2['555'][i]=1
        
        
        

## converting values in a logarithmic scale
for i in range(len(lst)):
    lst[i]=np.log(lst[i])
df['647']=lst
lst=df['555']
for i in range(len(lst)):
    lst[i]=np.log(lst[i])
df['555']=lst
lst=df1['488']
for i in range(len(lst)):
    lst[i]=np.log(lst[i])
df1['488']=lst
lst=df1['594']
for i in range(len(lst)):
    lst[i]=np.log(lst[i])
df1['594']=lst
lst=df2['647']
for i in range(len(lst)):
    lst[i]=np.log(lst[i])
df2['647']=lst
lst=df2['555']
for i in range(len(lst)):
    lst[i]=np.log(lst[i])
df2['555']=lst
lst=df2['488']
for i in range(len(lst)):
    lst[i]=np.log(lst[i])
df2['488']=lst
lst=df2['594']
for i in range(len(lst)):
    lst[i]=np.log(lst[i])
df2['594']=lst

#seperateing data into rounds
#dynamic rounds below
for h in range(2,11):
    path1 = 'E:\\ALI\\processing project\\Zombie\\dil 1\\Analysis\\hy\\{:02d}\\'.format(h)
    if not os.path.exists(path1):
        os.makedirs(path1) 
    dfh=df[df['hyb']==h]
    file_name = path1+'_pos_cell_num_actvsite{:02d}dy1.xlsx'.format(h)
    dfh.to_excel(file_name)
    dfh=df1[df1['hyb']==h]
    file_name = path1+'_pos_cell_num_actvsite{:02d}dy2.xlsx'.format(h)
    dfh.to_excel(file_name)

#static rounds:
for h in range(12,17):
    path1 = 'E:\\ALI\\processing project\\Zombie\\dil 1\\Analysis\\hy\\{:02d}\\'.format(h)
    if not os.path.exists(path1):
        os.makedirs(path1) 
    dfh=df2[df2['hyb']==h]
    file_name = path1+'_pos_cell_num_actvsite{:02d}st.xlsx'.format(h)
    dfh.to_excel(file_name)
    
path1 = 'E:\\ALI\\processing project\\Zombie\\dil 1\\Analysis\\hy\\{:02d}\\'.format(17)
if not os.path.exists(path1):
    os.makedirs(path1) 
dfh=df2[df2['hyb']==18]
file_name = path1+'_pos_cell_num_actvsite{:02d}st.xlsx'.format(17)
dfh.to_excel(file_name)


# in dynamic barcodes main dimension is two so I reduced it to 1
# I tried other metrics, cosine worked fine at first but when data became larger cosine lost legitimacy. on the other hand corelation metric worked pretty well.

for h in range(2,11):
    path1 = 'E:\\ALI\\processing project\\Zombie\\dil 1\\Analysis\\hy\\{:02d}\\'.format(h)
    df = pd.read_excel(path1+'_pos_cell_num_actvsite{:02d}dy1.xlsx'.format(h))
    df1 = pd.read_excel(path1+'_pos_cell_num_actvsite{:02d}dy2.xlsx'.format(h))
    df['647']=df['647']/np.mean(df['647'])
    df['555']=df['555']/np.mean(df['555'])
    df1['488']=df1['488']/np.mean(df1['488'])
    df1['594']=df1['594']/np.mean(df1['594'])
    df1a=pd.DataFrame()
    df1a['488']=df1['488']
    df1a['594']=df1['594']
    dfa=pd.DataFrame()
    dfa['647']=df['647']
    dfa['555']=df['555']
    #correlation metric worked the best I believe
    tsne = TSNE(n_components=1,metric=distance.correlation)
    tsne_results = tsne.fit_transform(dfa)
    tsne_results1 = tsne.fit_transform(df1a)
    kmeans = KMeans(n_clusters=2,n_init=30, max_iter=3000).fit(tsne_results)
    score = metrics.silhouette_score(dfa, kmeans.labels_, metric='euclidean')
    kmeans1 = KMeans(n_clusters=2,n_init=30, max_iter=3000).fit(tsne_results1)
    score1 = metrics.silhouette_score(df1a, kmeans.labels_, metric='euclidean')
    df1['label']=list(kmeans1.labels_)
    df['label']=list(kmeans.labels_)
    plt.figure(figsize=(16,10))
    plt.subplot(121)
    plt.ylim(0,2)
    plt.xlim(0,2)
    plt.title("hyb{:02d}".format(h)+'/Silhouetter Score: %.3f' % score)
    sns.scatterplot(
        x="647",y='555',
        hue="label",
        palette=['green','red'],
        data=df,
        legend="full",
        alpha=0.3
    )
    plt.subplot(122)
    plt.title('Silhouetter Score1: %.3f' % score1)
    sns.scatterplot(
        x="488",y='594',
        hue="label",
        palette=['green','red'],
        data=df1,
        legend="full",
        alpha=0.3
    )
    file_name = path1+'_pos_cell_num_actvsite{:02d}dycluster.xlsx'.format(h)
    file_name1 = path1+'_pos_cell_num_actvsite{:02d}dycluste1r.xlsx'.format(h)
    df.to_excel(file_name)
    df1.to_excel(file_name1)
    # compare mean log intensities to see how clustering worked
    print('mean',
    "0",'647',np.mean(df[df['label']==0]['647']),
    '0','555',np.mean(df[df['label']==0]['555']),
    '1','647',np.mean(df[df['label']==1]['647']),
    '1','555',np.mean(df[df['label']==1]['555']),
    '0','488',np.mean(df1[df1['label']==0]['488']),
    '0','594',np.mean(df1[df1['label']==0]['594']),
    '1','488',np.mean(df1[df1['label']==1]['488']),
    '1','594',np.mean(df1[df1['label']==1]['594'])
    )
# you were right: clusters aren't very pretty








#this code is designed to make sure label number 1 corresponds to T( thus label number 0 corresponds to C)
for h in range(2,11):
    path1 = 'E:\\ALI\\processing project\\Zombie\\dil 1\\Analysis\\hy\\{:02d}\\'.format(h)
    df = pd.read_excel(path1+'_pos_cell_num_actvsite{:02d}dycluster.xlsx'.format(h))
    plt.figure(figsize=(16,10))
    plt.subplot(121)
    plt.ylim(0,2)
    plt.xlim(0,2)
    plt.title("hyb{:02d}".format(h))
    sns.scatterplot(
        x="647",y='555',
        hue="label",
        palette=['green','red'],
        data=df,
        legend="full",
        alpha=0.3
    )
    if np.mean(df[df['label']==0]['647'])>np.mean(df[df['label']==0]['555']) and h%2!=0:
        for i in range(len(df)):
            if df['label'][i]==1:
                df['label'][i]=0
            else:
                df['label'][i]=1
    if np.mean(df[df['label']==1]['647'])>np.mean(df[df['label']==1]['555']) and h%2==0:
        for i in range(len(df)):
            if df['label'][i]==1:
                df['label'][i]=0
            else:
                df['label'][i]=1
    plt.subplot(122)
    plt.ylim(0,2)
    plt.xlim(0,2)
    plt.title("hyb{:02d}".format(h))
    sns.scatterplot(
        x="647",y='555',
        hue="label",
        palette=['green','red'],
        data=df,
        legend="full",
        alpha=0.3
    )
    df.to_excel(path1+'_pos_cell_num_actvsite{:02d}dycluster.xlsx'.format(h))
for h in range(2,11):
    path1 = 'E:\\ALI\\processing project\\Zombie\\dil 1\\Analysis\\hy\\{:02d}\\'.format(h)
    df1 = pd.read_excel(path1+'_pos_cell_num_actvsite{:02d}dycluste1r.xlsx'.format(h))
    plt.figure(figsize=(16,10))
    plt.subplot(121)
    plt.ylim(0,2)
    plt.xlim(0,2)
    plt.title("hyb{:02d}".format(h))
    sns.scatterplot(
        x="488",y='594',
        hue="label",
        palette=['green','red'],
        data=df1,
        legend="full",
        alpha=0.3
    )
    if np.mean(df1[df1['label']==0]['488'])>np.mean(df1[df1['label']==0]['594']) and h%2==0:
        for i in range(len(df1)):
            if df1['label'][i]==1:
                df1['label'][i]=0
            else:
                df1['label'][i]=1
    if np.mean(df1[df1['label']==1]['488'])>np.mean(df1[df1['label']==1]['594']) and h%2!=0:
        for i in range(len(df1)):
            if df1['label'][i]==1:
                df1['label'][i]=0
            else:
                df1['label'][i]=1
    plt.subplot(122)
    plt.ylim(0,2)
    plt.xlim(0,2)
    plt.title("hyb{:02d}".format(h))
    sns.scatterplot(
        x="488",y='594',
        hue="label",
        palette=['green','red'],
        data=df1,
        legend="full",
        alpha=0.3
    )
    df1.to_excel(path1+'_pos_cell_num_actvsite{:02d}dycluste1r.xlsx'.format(h))













#for static barcode we have dimension of 4
## I reduced it to 3 using tsne

for h in range(11,18):
    path1 = 'E:\\ALI\\processing project\\Zombie\\dil 1\\Analysis\\hy\\{:02d}\\'.format(h)
    df = pd.read_excel(path1+'_pos_cell_num_actvsite{:02d}st.xlsx'.format(h))
    dfa=pd.DataFrame()
    df['647']=df['647']/np.mean(df['647'])
    df['555']=df['555']/np.mean(df['555'])
    df['488']=df['488']/np.mean(df['488'])
    df['594']=df['594']/np.mean(df['594'])
    dfa['647']=df['647']
    dfa['488']=df['488']
    dfa['555']=df['555']
    dfa['594']=df['594']
    tsne = TSNE(n_components=3,metric=distance.correlation)
    tsne_results = tsne.fit_transform(dfa)
    #dfa['tsne-3d-one'] = tsne_results[:,0]
    #dfa['tsne-3d-two'] = tsne_results[:,1]
    #dfa['tsne-3d-three'] = tsne_results[:,2]
    kmeans = KMeans(n_clusters=4).fit(tsne_results)
    score = metrics.silhouette_score(dfa, kmeans.labels_, metric='euclidean')
    print('Silhouetter Score: %.3f' % score)
    df['label']=list(kmeans.labels_)
    dfa['label']=list(kmeans.labels_)
    #plt.figure(figsize=(16,10))
    #sns.scatterplot(
     #   x="tsne-3d-one",y='tsne-3d-two',z='tsne-3d-three',
      #  hue="label",
       # palette=['green','red','blue','black'],
        #data=dfa,
        #legend="full",
        #alpha=0.3
    #)
    file_name = path1+'_pos_cell_num_actvsite{:02d}stcluster.xlsx'.format(h)
    df.to_excel(file_name)
    print(np.mean(df[df['label']==0]['647']))
    print(np.mean(df[df['label']==0]['488']))
    print(np.mean(df[df['label']==0]['555']))
    print(np.mean(df[df['label']==0]['594']))
    print(np.mean(df[df['label']==1]['647']))
    print(np.mean(df[df['label']==1]['488']))
    print(np.mean(df[df['label']==1]['555']))
    print(np.mean(df[df['label']==1]['594']))
    print(np.mean(df[df['label']==2]['647']))
    print(np.mean(df[df['label']==2]['488']))
    print(np.mean(df[df['label']==2]['555']))
    print(np.mean(df[df['label']==2]['594']))
    print(np.mean(df[df['label']==3]['647']))
    print(np.mean(df[df['label']==3]['488']))
    print(np.mean(df[df['label']==3]['555']))
    print(np.mean(df[df['label']==3]['594']))


# I do not have luxury of plotting here so I used mean




for h in range(11,18):
    path1 = 'E:\\ALI\\processing project\\Zombie\\dil 1\\Analysis\\hy\\{:02d}\\'.format(h)
    df = pd.read_excel(path1+'_pos_cell_num_actvsite{:02d}stcluster.xlsx'.format(h))
    lst647=[]
    lst555=[]
    lst488=[]
    lst594=[]
    labels=[]
    for i in range(4):
        lst647.append(np.mean(df[df['label']==i]['647']))
        lst555.append(np.mean(df[df['label']==i]['555']))
        lst594.append(np.mean(df[df['label']==i]['594']))
        lst488.append(np.mean(df[df['label']==i]['488']))
    for j in range(len(lst647)):
        if lst647[j]==max(lst647):
            labels.append(j)
    for j in range(len(lst647)):
        if lst488[j]==max(lst488):
            labels.append(j)
    for j in range(len(lst647)):
        if lst555[j]==max(lst555):
            labels.append(j)
    for j in range(len(lst647)):
        if lst594[j]==max(lst594):
            labels.append(j)
    for k in range(len(df)):
        if df['label'][k]==labels[0]:
            df['label'][k]=0
        elif df['label'][k]==labels[1]:
            df['label'][k]=1
        elif df['label'][k]==labels[2]:
            df['label'][k]=2
        elif df['label'][k]==labels[3]:
            df['label'][k]=3
    file_name = path1+'_pos_cell_num_actvsite{:02d}stclustermod.xlsx'.format(h)
    df.to_excel(file_name)





for h in range(2,11):
    path1 = 'E:\\ALI\\processing project\\Zombie\\dil 1\\Analysis\\hy\\{:02d}\\'.format(h)
    df = pd.read_excel(path1+'_pos_cell_num_actvsite{:02d}dycluste1r.xlsx'.format(h))
    df['seqnum']=[2*(h-2)+1 for i in range(len(df))]
    df.to_excel(path1+'_pos_cell_num_actvsite{:02d}dycluste1r.xlsx'.format(h))
    df1 = pd.read_excel(path1+'_pos_cell_num_actvsite{:02d}dycluster.xlsx'.format(h))
    df1['seqnum']=[2*(h-2)+2 for i in range(len(df1))]
    df1.to_excel(path1+'_pos_cell_num_actvsite{:02d}dycluster.xlsx'.format(h))
    
  
  
  
  
  
  for h in range(11,17):
    path1 = 'E:\\ALI\\processing project\\Zombie\\dil 1\\Analysis\\hy\\{:02d}\\'.format(h)
    df = pd.read_excel(path1+'_pos_cell_num_actvsite{:02d}stclustermod.xlsx'.format(h))
    df['seqnum']=[8+h for i in range(len(df))]
    df.to_excel(path1+'_pos_cell_num_actvsite{:02d}stclustermod.xlsx'.format(h))
path1 = 'E:\\ALI\\processing project\\Zombie\\dil 1\\Analysis\\hy\\{:02d}\\'.format(17)
df = pd.read_excel(path1+'_pos_cell_num_actvsite{:02d}stclustermod.xlsx'.format(17))
df['seqnum']=[19 for i in range(len(df))]
df.to_excel(path1+'_pos_cell_num_actvsite{:02d}stclustermod.xlsx'.format(h))





for h in range(2,11):
    path1 = 'E:\\ALI\\processing project\\Zombie\\dil 1\\Analysis\\hy\\{:02d}\\'.format(h)
    df = pd.read_excel(path1+'_pos_cell_num_actvsite{:02d}dycluste1r.xlsx'.format(h))
    df1 = pd.read_excel(path1+'_pos_cell_num_actvsite{:02d}dycluster.xlsx'.format(h))
    fi=pd.DataFrame()
    fi1=pd.DataFrame()
    fi['pos']=df['pos']
    fi['cell']=df['cell']
    fi['act']=df['act']
    fi['seqnum']=df['seqnum']
    fi['label']=df['label']
    fi1['pos']=df1['pos']
    fi1['cell']=df1['cell']
    fi1['act']=df1['act']
    fi1['seqnum']=df1['seqnum']
    fi1['label']=df1['label']
    fi=fi.append(fi1)
    fi.to_excel(path1+'_pos_cell_num_actvsite{:02d}seq.xlsx'.format(h))
    
    
    
    
    
 
df = pd.read_excel ('E:\\ALI\\processing project\\Zombie\\dil 1\\Analysis\\hy\\{:02d}\\'.format(2)+'_pos_cell_num_actvsite{:02d}seq.xlsx'.format(2))
for h in range(3,11):
    dfa = pd.read_excel ('E:\\ALI\\processing project\\Zombie\\dil 1\\Analysis\\hy\\{:02d}\\'.format(h)+'_pos_cell_num_actvsite{:02d}seq.xlsx'.format(h))
    df=df.append(dfa)
for h in range(12,18):
    dfa = pd.read_excel ('E:\\ALI\\processing project\\Zombie\\dil 1\\Analysis\\hy\\{:02d}\\'.format(h)+'_pos_cell_num_actvsite{:02d}stclustermod.xlsx'.format(h))
    df1=pd.DataFrame()
    df1['pos']=dfa['pos']
    df1['cell']=dfa['cell']
    df1['act']=dfa['act']
    df1['seqnum']=dfa['seqnum']
    df1['label']=dfa['label']
    df=df.append(df1)
df.drop(columns='Unnamed: 0',inplace=True)
df.sort_values(by=['pos','cell','act','seqnum'],inplace=True)
file_name = 'E:\\ALI\\processing project\\Zombie\\dil 1\\Analysis\\hy\\'+'seq1.xlsx'
df.to_excel(file_name)









